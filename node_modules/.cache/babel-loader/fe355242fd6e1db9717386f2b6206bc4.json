{"ast":null,"code":"var _jsxFileName = \"/Users/yiangosstroppos/Downloads/my-kanban-board-main 2/src/components/BoardPage/ColumnComponent/ColumnAction.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { IconButton, Menu, MenuItem } from '@material-ui/core';\nimport { useDispatch, useSelector } from 'react-redux';\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\nimport DeleteConfirmDialog from '../../shared/DeteleConfirmDialog';\nimport RenameDialog from '../../shared/RenameDialog';\nimport ColumnService from '../../../service/column-service';\nimport { deleteColumn, getColumnById, setColumnById } from '../../../reducer/base-reducer';\nimport { columnFactory } from '../../../models/factory';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function ColumnAction({\n  colId\n}) {\n  _s();\n\n  const dispatch = useDispatch();\n  const column = useSelector(getColumnById)[colId];\n  const [anchorEl, setAnchorEl] = React.useState(null);\n  const [isDeleteRequested, setDeleteRequest] = useState(false);\n  const [isRenameRequested, setRenameRequest] = useState(false);\n\n  const handleClose = () => {\n    setAnchorEl(null);\n  };\n\n  const onDelete = () => {\n    dispatch(deleteColumn({\n      colId\n    }));\n    ColumnService.deleteColumn(colId);\n  };\n\n  const onNameChange = value => {\n    dispatch(setColumnById({\n      id: colId,\n      data: { ...column,\n        title: value\n      }\n    }));\n  };\n\n  const saveRename = value => {\n    const updatingColumn = columnFactory(value);\n    updatingColumn.id = colId;\n    ColumnService.updateColumn(updatingColumn);\n  };\n\n  const openRenameDialog = () => {\n    setRenameRequest(true);\n    handleClose();\n  };\n\n  const openDeleteDialog = () => {\n    handleClose();\n    setDeleteRequest(true);\n  };\n\n  const open = Boolean(anchorEl);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(IconButton, {\n      \"aria-label\": \"more\",\n      \"aria-controls\": \"long-menu\",\n      \"aria-haspopup\": \"true\",\n      onClick: event => setAnchorEl(event.currentTarget),\n      children: /*#__PURE__*/_jsxDEV(MoreVertIcon, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(DeleteConfirmDialog, {\n      onDelete: onDelete,\n      open: isDeleteRequested,\n      onClose: () => setDeleteRequest(false)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(RenameDialog, {\n      open: isRenameRequested,\n      setOpen: setRenameRequest,\n      onChange: onNameChange,\n      title: column.title,\n      model: \"column\",\n      onRename: saveRename\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Menu, {\n      id: \"long-menu\",\n      anchorEl: anchorEl,\n      keepMounted: true,\n      open: open,\n      onClose: handleClose,\n      children: [/*#__PURE__*/_jsxDEV(MenuItem, {\n        onClick: openRenameDialog,\n        children: \"Rename\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n        onClick: openDeleteDialog,\n        color: 'secondary',\n        children: \"Delete\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n\n_s(ColumnAction, \"+9unVYfskNPKBbwZm7snLVZzJkw=\", false, function () {\n  return [useDispatch, useSelector];\n});\n\n_c = ColumnAction;\n\nvar _c;\n\n$RefreshReg$(_c, \"ColumnAction\");","map":{"version":3,"sources":["/Users/yiangosstroppos/Downloads/my-kanban-board-main 2/src/components/BoardPage/ColumnComponent/ColumnAction.tsx"],"names":["React","useState","IconButton","Menu","MenuItem","useDispatch","useSelector","MoreVertIcon","DeleteConfirmDialog","RenameDialog","ColumnService","deleteColumn","getColumnById","setColumnById","columnFactory","ColumnAction","colId","dispatch","column","anchorEl","setAnchorEl","isDeleteRequested","setDeleteRequest","isRenameRequested","setRenameRequest","handleClose","onDelete","onNameChange","value","id","data","title","saveRename","updatingColumn","updateColumn","openRenameDialog","openDeleteDialog","open","Boolean","event","currentTarget"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport { IconButton, Menu, MenuItem } from '@material-ui/core';\nimport { useDispatch, useSelector } from 'react-redux';\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\n\nimport DeleteConfirmDialog from '../../shared/DeteleConfirmDialog';\nimport RenameDialog from '../../shared/RenameDialog';\nimport ColumnService from '../../../service/column-service';\n\nimport { deleteColumn, getColumnById, setColumnById } from '../../../reducer/base-reducer';\nimport { columnFactory } from '../../../models/factory';\n\ninterface Props {\n  colId: string;\n}\n\nexport default function ColumnAction({ colId }: Props) {\n  const dispatch = useDispatch();\n  const column = useSelector(getColumnById)[colId];\n\n  const [anchorEl, setAnchorEl] = React.useState<null | HTMLElement>(null);\n  const [isDeleteRequested, setDeleteRequest] = useState(false);\n  const [isRenameRequested, setRenameRequest] = useState(false);\n\n  const handleClose = () => {\n    setAnchorEl(null);\n  };\n\n  const onDelete = () => {\n    dispatch(deleteColumn({ colId }));\n    ColumnService.deleteColumn(colId);\n  };\n\n  const onNameChange = (value: string) => {\n    dispatch(setColumnById({ id: colId, data: { ...column, title: value } }));\n  };\n\n  const saveRename = (value: string) => {\n    const updatingColumn = columnFactory(value);\n    updatingColumn.id = colId;\n    ColumnService.updateColumn(updatingColumn);\n  };\n\n  const openRenameDialog = () => {\n    setRenameRequest(true);\n    handleClose();\n  };\n\n  const openDeleteDialog = () => {\n    handleClose();\n    setDeleteRequest(true);\n  };\n\n  const open = Boolean(anchorEl);\n\n  return (\n    <>\n      <IconButton\n        aria-label=\"more\"\n        aria-controls=\"long-menu\"\n        aria-haspopup=\"true\"\n        onClick={(event) => setAnchorEl(event.currentTarget)}\n      >\n        <MoreVertIcon />\n      </IconButton>\n      <DeleteConfirmDialog onDelete={onDelete} open={isDeleteRequested} onClose={() => setDeleteRequest(false)} />\n      <RenameDialog\n        open={isRenameRequested}\n        setOpen={setRenameRequest}\n        onChange={onNameChange}\n        title={column.title}\n        model=\"column\"\n        onRename={saveRename}\n      />\n      <Menu id=\"long-menu\" anchorEl={anchorEl} keepMounted open={open} onClose={handleClose}>\n        <MenuItem onClick={openRenameDialog}>Rename</MenuItem>\n        <MenuItem onClick={openDeleteDialog} color={'secondary'}>\n          Delete\n        </MenuItem>\n      </Menu>\n    </>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}