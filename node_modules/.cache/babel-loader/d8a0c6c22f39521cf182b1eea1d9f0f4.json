{"ast":null,"code":"var _jsxFileName = \"/Users/yiangosstroppos/Downloads/my-kanban-board-main 2/src/components/BoardPage/TicketComponents/TicketDialog.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport OpenInNewIcon from '@material-ui/icons/OpenInNew';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Button, Dialog, DialogActions, DialogContent, DialogTitle, FormControlLabel, IconButton, Switch } from '@material-ui/core';\nimport TicketContent from '../../shared/TicketContent';\nimport { getUI, setUI, deleteTicket, getColumnById, getSelectedBoard } from '../../../reducer/base-reducer';\nimport DeleteConfirmDialog from '../../shared/DeteleConfirmDialog';\nimport TicketService from '../../../service/ticket-service';\nimport { useTaskDialogStyle } from '../styles';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function TicketDialog({\n  ticket,\n  open,\n  setDialog\n}) {\n  _s();\n\n  const classes = useTaskDialogStyle();\n  const ticketEditing = useSelector(getUI).ticketEditing || false;\n  const columnsById = useSelector(getColumnById);\n  const selectedBoard = useSelector(getSelectedBoard);\n  const dispatch = useDispatch();\n  const [isDeleteRequested, setDeleteRequested] = useState(false);\n\n  const editing = ticketEditing => {\n    dispatch(setUI({\n      ticketEditing\n    }));\n  };\n\n  const columnId = Object.keys(columnsById).filter(colId => {\n    return columnsById[colId].ticketIds.indexOf(ticket.id) > -1;\n  })[0];\n\n  const onDelete = () => {\n    dispatch(deleteTicket({\n      ticketId: ticket.id,\n      columnId\n    }));\n    TicketService.removeTicket(ticket.id);\n    setDialog(false);\n  };\n\n  return open ? /*#__PURE__*/_jsxDEV(Dialog, {\n    open: open,\n    \"aria-labelledby\": \"form-dialog-title\",\n    onClose: () => setDialog(false),\n    onBackdropClick: () => setDialog(false),\n    fullWidth: true,\n    maxWidth: \"sm\",\n    keepMounted: true,\n    children: [/*#__PURE__*/_jsxDEV(DialogTitle, {\n      id: \"form-dialog-title\",\n      children: [ticket.title, /*#__PURE__*/_jsxDEV(\"a\", {\n        href: `/${selectedBoard.alias}/${ticket.id}`,\n        target: \"_blank\",\n        children: /*#__PURE__*/_jsxDEV(IconButton, {\n          \"aria-label\": \"delete\",\n          className: classes.iconButton,\n          children: /*#__PURE__*/_jsxDEV(OpenInNewIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(FormControlLabel, {\n        className: classes.switchController,\n        labelPlacement: \"start\",\n        control: /*#__PURE__*/_jsxDEV(Switch, {\n          name: \"checkedB\",\n          color: \"primary\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 20\n        }, this),\n        value: ticketEditing,\n        onChange: (event, checked) => editing(checked),\n        label: \"Edit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(DialogContent, {\n      dividers: true,\n      children: /*#__PURE__*/_jsxDEV(TicketContent, {\n        isEditing: ticketEditing,\n        ticket: ticket,\n        columnId: columnId\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(DialogActions, {\n      className: classes.dialogActions,\n      children: [/*#__PURE__*/_jsxDEV(Button, {\n        onClick: () => setDeleteRequested(true),\n        color: \"secondary\",\n        startIcon: /*#__PURE__*/_jsxDEV(DeleteIcon, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 87\n        }, this),\n        children: \"Delete\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        onClick: () => setDialog(false),\n        color: \"primary\",\n        children: \"Close\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(DeleteConfirmDialog, {\n      onDelete: onDelete,\n      open: isDeleteRequested,\n      onClose: () => setDeleteRequested(false)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 5\n  }, this) : null;\n}\n\n_s(TicketDialog, \"zca0c7MQHf//Oe2IMVdI91XUReo=\", false, function () {\n  return [useTaskDialogStyle, useSelector, useSelector, useSelector, useDispatch];\n});\n\n_c = TicketDialog;\n\nvar _c;\n\n$RefreshReg$(_c, \"TicketDialog\");","map":{"version":3,"sources":["/Users/yiangosstroppos/Downloads/my-kanban-board-main 2/src/components/BoardPage/TicketComponents/TicketDialog.tsx"],"names":["React","useState","OpenInNewIcon","DeleteIcon","useDispatch","useSelector","Button","Dialog","DialogActions","DialogContent","DialogTitle","FormControlLabel","IconButton","Switch","TicketContent","getUI","setUI","deleteTicket","getColumnById","getSelectedBoard","DeleteConfirmDialog","TicketService","useTaskDialogStyle","TicketDialog","ticket","open","setDialog","classes","ticketEditing","columnsById","selectedBoard","dispatch","isDeleteRequested","setDeleteRequested","editing","columnId","Object","keys","filter","colId","ticketIds","indexOf","id","onDelete","ticketId","removeTicket","title","alias","iconButton","switchController","event","checked","dialogActions"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport OpenInNewIcon from '@material-ui/icons/OpenInNew';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport { useDispatch, useSelector } from 'react-redux';\nimport {\n  Button,\n  Dialog,\n  DialogActions,\n  DialogContent,\n  DialogTitle,\n  FormControlLabel,\n  IconButton,\n  Switch,\n} from '@material-ui/core';\n\nimport { Tickets } from '../../../models/Tickets';\nimport TicketContent from '../../shared/TicketContent';\nimport { getUI, setUI, deleteTicket, getColumnById, getSelectedBoard } from '../../../reducer/base-reducer';\nimport DeleteConfirmDialog from '../../shared/DeteleConfirmDialog';\nimport TicketService from '../../../service/ticket-service';\nimport { useTaskDialogStyle } from '../styles';\n\ninterface Props {\n  ticket: Tickets;\n  open: boolean;\n  setDialog: Function;\n}\n\nexport default function TicketDialog({ ticket, open, setDialog }: Props) {\n  const classes = useTaskDialogStyle();\n\n  const ticketEditing = useSelector(getUI).ticketEditing || false;\n  const columnsById = useSelector(getColumnById);\n  const selectedBoard = useSelector(getSelectedBoard);\n\n  const dispatch = useDispatch();\n\n  const [isDeleteRequested, setDeleteRequested] = useState(false);\n\n  const editing = (ticketEditing: boolean) => {\n    dispatch(setUI({ ticketEditing }));\n  };\n\n  const columnId = Object.keys(columnsById).filter((colId) => {\n    return columnsById[colId].ticketIds.indexOf(ticket.id) > -1;\n  })[0];\n\n  const onDelete = () => {\n    dispatch(deleteTicket({ ticketId: ticket.id, columnId }));\n    TicketService.removeTicket(ticket.id);\n    setDialog(false);\n  };\n\n  return open ? (\n    <Dialog\n      open={open}\n      aria-labelledby=\"form-dialog-title\"\n      onClose={() => setDialog(false)}\n      onBackdropClick={() => setDialog(false)}\n      fullWidth\n      maxWidth=\"sm\"\n      keepMounted\n    >\n      <DialogTitle id=\"form-dialog-title\">\n        {ticket.title}\n\n        <a href={`/${selectedBoard.alias}/${ticket.id}`} target=\"_blank\">\n          <IconButton aria-label=\"delete\" className={classes.iconButton}>\n            <OpenInNewIcon />\n          </IconButton>\n        </a>\n        <FormControlLabel\n          className={classes.switchController}\n          labelPlacement=\"start\"\n          control={<Switch name=\"checkedB\" color=\"primary\" />}\n          value={ticketEditing}\n          onChange={(event, checked) => editing(checked)}\n          label=\"Edit\"\n        />\n      </DialogTitle>\n      <DialogContent dividers>\n        <TicketContent isEditing={ticketEditing} ticket={ticket} columnId={columnId} />\n      </DialogContent>\n      <DialogActions className={classes.dialogActions}>\n        <Button onClick={() => setDeleteRequested(true)} color=\"secondary\" startIcon={<DeleteIcon />}>\n          Delete\n        </Button>\n        <Button onClick={() => setDialog(false)} color=\"primary\">\n          Close\n        </Button>\n      </DialogActions>\n      <DeleteConfirmDialog onDelete={onDelete} open={isDeleteRequested} onClose={() => setDeleteRequested(false)} />\n    </Dialog>\n  ) : null;\n}\n"]},"metadata":{},"sourceType":"module"}