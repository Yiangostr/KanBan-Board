{"ast":null,"code":"var _jsxFileName = \"/Users/yiangosstroppos/Downloads/my-kanban-board-main 2/src/components/shared/RenameDialog.tsx\";\nimport React from 'react';\nimport { Button, Dialog, DialogActions, DialogContent, DialogContentText, DialogTitle, TextField } from '@material-ui/core';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function RenameDialog({\n  open,\n  setOpen,\n  onRename,\n  onChange,\n  title,\n  model\n}) {\n  return /*#__PURE__*/_jsxDEV(Dialog, {\n    open: open,\n    onClose: () => setOpen(false),\n    \"aria-labelledby\": \"form-dialog-title\",\n    children: [/*#__PURE__*/_jsxDEV(DialogTitle, {\n      id: \"form-dialog-title\",\n      children: \"Rename\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(DialogContent, {\n      children: [/*#__PURE__*/_jsxDEV(DialogContentText, {\n        children: [\"Rename the \", model, \" title\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        autoFocus: true,\n        margin: \"dense\",\n        id: \"name\",\n        label: \"New Column Name\",\n        fullWidth: true,\n        value: title,\n        onChange: event => {\n          onChange(event.target.value);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(DialogActions, {\n      children: /*#__PURE__*/_jsxDEV(Button, {\n        onClick: () => {\n          onRename(title);\n          setOpen(false);\n        },\n        color: \"primary\",\n        children: \"OK\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 5\n  }, this);\n}\n_c = RenameDialog;\n\nvar _c;\n\n$RefreshReg$(_c, \"RenameDialog\");","map":{"version":3,"sources":["/Users/yiangosstroppos/Downloads/my-kanban-board-main 2/src/components/shared/RenameDialog.tsx"],"names":["React","Button","Dialog","DialogActions","DialogContent","DialogContentText","DialogTitle","TextField","RenameDialog","open","setOpen","onRename","onChange","title","model","event","target","value"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SACEC,MADF,EAEEC,MAFF,EAGEC,aAHF,EAIEC,aAJF,EAKEC,iBALF,EAMEC,WANF,EAOEC,SAPF,QAQO,mBARP;;AAmBA,eAAe,SAASC,YAAT,CAAsB;AAAEC,EAAAA,IAAF;AAAQC,EAAAA,OAAR;AAAiBC,EAAAA,QAAjB;AAA2BC,EAAAA,QAA3B;AAAqCC,EAAAA,KAArC;AAA4CC,EAAAA;AAA5C,CAAtB,EAAkF;AAC/F,sBACE,QAAC,MAAD;AAAQ,IAAA,IAAI,EAAEL,IAAd;AAAoB,IAAA,OAAO,EAAE,MAAMC,OAAO,CAAC,KAAD,CAA1C;AAAmD,uBAAgB,mBAAnE;AAAA,4BACE,QAAC,WAAD;AAAa,MAAA,EAAE,EAAC,mBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEE,QAAC,aAAD;AAAA,8BACE,QAAC,iBAAD;AAAA,kCAA+BI,KAA/B;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE,QAAC,SAAD;AACE,QAAA,SAAS,MADX;AAEE,QAAA,MAAM,EAAC,OAFT;AAGE,QAAA,EAAE,EAAC,MAHL;AAIE,QAAA,KAAK,EAAC,iBAJR;AAKE,QAAA,SAAS,MALX;AAME,QAAA,KAAK,EAAED,KANT;AAOE,QAAA,QAAQ,EAAGE,KAAD,IAAgD;AACxDH,UAAAA,QAAQ,CAACG,KAAK,CAACC,MAAN,CAAaC,KAAd,CAAR;AACD;AATH;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF,eAgBE,QAAC,aAAD;AAAA,6BACE,QAAC,MAAD;AACE,QAAA,OAAO,EAAE,MAAM;AACbN,UAAAA,QAAQ,CAACE,KAAD,CAAR;AACAH,UAAAA,OAAO,CAAC,KAAD,CAAP;AACD,SAJH;AAKE,QAAA,KAAK,EAAC,SALR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YAhBF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AA8BD;KA/BuBF,Y","sourcesContent":["import React from 'react';\nimport {\n  Button,\n  Dialog,\n  DialogActions,\n  DialogContent,\n  DialogContentText,\n  DialogTitle,\n  TextField,\n} from '@material-ui/core';\n\ninterface Props {\n  open: boolean;\n  setOpen: (val: boolean) => void;\n  onRename: (val: string) => void;\n  onChange: (val: string) => void;\n  title: string;\n  model: string;\n}\n\nexport default function RenameDialog({ open, setOpen, onRename, onChange, title, model }: Props) {\n  return (\n    <Dialog open={open} onClose={() => setOpen(false)} aria-labelledby=\"form-dialog-title\">\n      <DialogTitle id=\"form-dialog-title\">Rename</DialogTitle>\n      <DialogContent>\n        <DialogContentText>Rename the {model} title</DialogContentText>\n        <TextField\n          autoFocus\n          margin=\"dense\"\n          id=\"name\"\n          label=\"New Column Name\"\n          fullWidth\n          value={title}\n          onChange={(event: React.ChangeEvent<HTMLInputElement>) => {\n            onChange(event.target.value);\n          }}\n        />\n      </DialogContent>\n      <DialogActions>\n        <Button\n          onClick={() => {\n            onRename(title);\n            setOpen(false);\n          }}\n          color=\"primary\"\n        >\n          OK\n        </Button>\n      </DialogActions>\n    </Dialog>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}