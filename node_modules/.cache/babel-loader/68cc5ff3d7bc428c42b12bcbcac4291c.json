{"ast":null,"code":"var _jsxFileName = \"/Users/yiangosstroppos/Downloads/my-kanban-board-main 2/src/components/BoardPage/Menubar.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { Fragment, useState } from 'react';\nimport MuiAppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport IconButton from '@material-ui/core/IconButton';\nimport ProjectsIcon from '@material-ui/icons/Apps';\nimport { Link } from 'react-router-dom';\nimport RenameDialog from '../shared/RenameDialog';\nimport BoardService from '../../service/board-service';\nimport { useMenubarStyles } from './styles';\nimport { getSelectedBoard, setSelectedBoard } from '../../reducer/base-reducer';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Menubar() {\n  _s();\n\n  const classes = useMenubarStyles();\n  const [isRequestTitleChange, setRequestTitleChange] = useState(false);\n  const dispatch = useDispatch();\n  const selectedBoard = useSelector(getSelectedBoard);\n\n  const handleOnRename = val => {\n    BoardService.updateBoard(selectedBoard.id, val);\n  };\n\n  const handleOnChange = value => {\n    dispatch(setSelectedBoard({ ...selectedBoard,\n      title: value\n    }));\n  };\n\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: /*#__PURE__*/_jsxDEV(MuiAppBar, {\n      position: \"static\",\n      children: /*#__PURE__*/_jsxDEV(Toolbar, {\n        children: [/*#__PURE__*/_jsxDEV(Link, {\n          to: \"/\",\n          children: /*#__PURE__*/_jsxDEV(IconButton, {\n            className: classes.menuButton,\n            edge: \"start\",\n            color: \"inherit\",\n            children: /*#__PURE__*/_jsxDEV(ProjectsIcon, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 37,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 36,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h6\",\n          className: classes.title,\n          onDoubleClick: () => setRequestTitleChange(true),\n          children: selectedBoard.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(RenameDialog, {\n          open: isRequestTitleChange,\n          setOpen: setRequestTitleChange,\n          onRename: handleOnRename,\n          onChange: handleOnChange,\n          title: selectedBoard.title,\n          model: \"board\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Menubar, \"PuVMnMSD9Lu1APfgatYH7lJTR9o=\", false, function () {\n  return [useMenubarStyles, useDispatch, useSelector];\n});\n\n_c = Menubar;\n\nvar _c;\n\n$RefreshReg$(_c, \"Menubar\");","map":{"version":3,"sources":["/Users/yiangosstroppos/Downloads/my-kanban-board-main 2/src/components/BoardPage/Menubar.tsx"],"names":["React","Fragment","useState","MuiAppBar","Toolbar","Typography","IconButton","ProjectsIcon","Link","RenameDialog","BoardService","useMenubarStyles","getSelectedBoard","setSelectedBoard","useDispatch","useSelector","Menubar","classes","isRequestTitleChange","setRequestTitleChange","dispatch","selectedBoard","handleOnRename","val","updateBoard","id","handleOnChange","value","title","menuButton"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,QAA1B,QAA0C,OAA1C;AACA,OAAOC,SAAP,MAAsB,0BAAtB;AACA,OAAOC,OAAP,MAAoB,2BAApB;AACA,OAAOC,UAAP,MAAuB,8BAAvB;AACA,OAAOC,UAAP,MAAuB,8BAAvB;AACA,OAAOC,YAAP,MAAyB,yBAAzB;AACA,SAASC,IAAT,QAAqB,kBAArB;AAEA,OAAOC,YAAP,MAAyB,wBAAzB;AACA,OAAOC,YAAP,MAAyB,6BAAzB;AAEA,SAASC,gBAAT,QAAiC,UAAjC;AACA,SAASC,gBAAT,EAA2BC,gBAA3B,QAAmD,4BAAnD;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;;AAEA,eAAe,SAASC,OAAT,GAAmB;AAAA;;AAChC,QAAMC,OAAO,GAAGN,gBAAgB,EAAhC;AACA,QAAM,CAACO,oBAAD,EAAuBC,qBAAvB,IAAgDjB,QAAQ,CAAC,KAAD,CAA9D;AACA,QAAMkB,QAAQ,GAAGN,WAAW,EAA5B;AAEA,QAAMO,aAAa,GAAGN,WAAW,CAACH,gBAAD,CAAjC;;AAEA,QAAMU,cAAc,GAAIC,GAAD,IAAiB;AACtCb,IAAAA,YAAY,CAACc,WAAb,CAAyBH,aAAa,CAACI,EAAvC,EAA2CF,GAA3C;AACD,GAFD;;AAIA,QAAMG,cAAc,GAAIC,KAAD,IAAmB;AACxCP,IAAAA,QAAQ,CAACP,gBAAgB,CAAC,EAAE,GAAGQ,aAAL;AAAoBO,MAAAA,KAAK,EAAED;AAA3B,KAAD,CAAjB,CAAR;AACD,GAFD;;AAIA,sBACE,QAAC,QAAD;AAAA,2BACE,QAAC,SAAD;AAAW,MAAA,QAAQ,EAAC,QAApB;AAAA,6BACE,QAAC,OAAD;AAAA,gCACE,QAAC,IAAD;AAAM,UAAA,EAAE,EAAC,GAAT;AAAA,iCACE,QAAC,UAAD;AAAY,YAAA,SAAS,EAAEV,OAAO,CAACY,UAA/B;AAA2C,YAAA,IAAI,EAAC,OAAhD;AAAwD,YAAA,KAAK,EAAC,SAA9D;AAAA,mCACE,QAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBADF,eAOE,QAAC,UAAD;AAAY,UAAA,OAAO,EAAC,IAApB;AAAyB,UAAA,SAAS,EAAEZ,OAAO,CAACW,KAA5C;AAAmD,UAAA,aAAa,EAAE,MAAMT,qBAAqB,CAAC,IAAD,CAA7F;AAAA,oBACGE,aAAa,CAACO;AADjB;AAAA;AAAA;AAAA;AAAA,gBAPF,eAUE,QAAC,YAAD;AACE,UAAA,IAAI,EAAEV,oBADR;AAEE,UAAA,OAAO,EAAEC,qBAFX;AAGE,UAAA,QAAQ,EAAEG,cAHZ;AAIE,UAAA,QAAQ,EAAEI,cAJZ;AAKE,UAAA,KAAK,EAAEL,aAAa,CAACO,KALvB;AAME,UAAA,KAAK,EAAC;AANR;AAAA;AAAA;AAAA;AAAA,gBAVF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAyBD;;GAxCuBZ,O;UACNL,gB,EAECG,W,EAEKC,W;;;KALAC,O","sourcesContent":["import React, { Fragment, useState } from 'react';\nimport MuiAppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport IconButton from '@material-ui/core/IconButton';\nimport ProjectsIcon from '@material-ui/icons/Apps';\nimport { Link } from 'react-router-dom';\n\nimport RenameDialog from '../shared/RenameDialog';\nimport BoardService from '../../service/board-service';\n\nimport { useMenubarStyles } from './styles';\nimport { getSelectedBoard, setSelectedBoard } from '../../reducer/base-reducer';\nimport { useDispatch, useSelector } from 'react-redux';\n\nexport default function Menubar() {\n  const classes = useMenubarStyles();\n  const [isRequestTitleChange, setRequestTitleChange] = useState(false);\n  const dispatch = useDispatch();\n\n  const selectedBoard = useSelector(getSelectedBoard);\n\n  const handleOnRename = (val: string) => {\n    BoardService.updateBoard(selectedBoard.id, val);\n  };\n\n  const handleOnChange = (value: string) => {\n    dispatch(setSelectedBoard({ ...selectedBoard, title: value }));\n  };\n\n  return (\n    <Fragment>\n      <MuiAppBar position=\"static\">\n        <Toolbar>\n          <Link to=\"/\">\n            <IconButton className={classes.menuButton} edge=\"start\" color=\"inherit\">\n              <ProjectsIcon />\n            </IconButton>\n          </Link>\n\n          <Typography variant=\"h6\" className={classes.title} onDoubleClick={() => setRequestTitleChange(true)}>\n            {selectedBoard.title}\n          </Typography>\n          <RenameDialog\n            open={isRequestTitleChange}\n            setOpen={setRequestTitleChange}\n            onRename={handleOnRename}\n            onChange={handleOnChange}\n            title={selectedBoard.title}\n            model=\"board\"\n          />\n        </Toolbar>\n      </MuiAppBar>\n    </Fragment>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}