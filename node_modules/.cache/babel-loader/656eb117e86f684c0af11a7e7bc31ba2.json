{"ast":null,"code":"var _jsxFileName = \"/Users/yiangosstroppos/Downloads/my-kanban-board-main 2/src/components/HomePage/AddNewBoardDialog.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { Button, Dialog, DialogActions, DialogContent, DialogTitle, TextField } from '@material-ui/core';\nimport BoardService from '../../service/board-service';\nimport { inputValueSetter } from '../../utils';\nimport { useDispatch } from 'react-redux';\nimport { addBoard } from '../../reducer/base-reducer';\nimport { boardFactory } from '../../models/factory';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst AddNewBoardDialog = props => {\n  _s();\n\n  const {\n    onClose,\n    open\n  } = props;\n  const [boardName, setBoardName] = useState('');\n  const [boardAlias, setBoardAlias] = useState('');\n  const [boardDescription, setBoardDescription] = useState('');\n  const dispatch = useDispatch();\n\n  const handleCancel = () => {\n    onClose();\n  };\n\n  const handleOk = () => {\n    const newBoard = boardFactory(boardName, boardDescription, boardAlias);\n    BoardService.createBoard(newBoard);\n    dispatch(addBoard(newBoard));\n    onClose();\n  };\n\n  return /*#__PURE__*/_jsxDEV(Dialog, {\n    maxWidth: \"xs\",\n    open: open,\n    children: [/*#__PURE__*/_jsxDEV(DialogTitle, {\n      children: \"Add New Board\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(DialogContent, {\n      dividers: true,\n      children: [/*#__PURE__*/_jsxDEV(TextField, {\n        fullWidth: true,\n        label: \"Name\",\n        value: boardName,\n        onChange: inputValueSetter(setBoardName),\n        variant: \"outlined\",\n        placeholder: \"Board title\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        fullWidth: true,\n        label: \"Alias\",\n        placeholder: \"Unique Alias\",\n        variant: \"outlined\",\n        value: boardAlias,\n        onChange: inputValueSetter(setBoardAlias)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        fullWidth: true,\n        label: \"Description\",\n        multiline: true,\n        rows: 2,\n        placeholder: \"This board is for ...\",\n        variant: \"outlined\",\n        value: boardDescription,\n        onChange: inputValueSetter(setBoardDescription)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(DialogActions, {\n      children: [/*#__PURE__*/_jsxDEV(Button, {\n        autoFocus: true,\n        onClick: handleCancel,\n        color: \"primary\",\n        children: \"Cancel\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        onClick: handleOk,\n        color: \"primary\",\n        variant: \"contained\",\n        children: \"OK\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 5\n  }, this);\n};\n\n_s(AddNewBoardDialog, \"CrohDt1aUzUQDsiOxCqhQ5xDgPk=\", false, function () {\n  return [useDispatch];\n});\n\n_c = AddNewBoardDialog;\nexport default AddNewBoardDialog;\n\nvar _c;\n\n$RefreshReg$(_c, \"AddNewBoardDialog\");","map":{"version":3,"sources":["/Users/yiangosstroppos/Downloads/my-kanban-board-main 2/src/components/HomePage/AddNewBoardDialog.tsx"],"names":["React","useState","Button","Dialog","DialogActions","DialogContent","DialogTitle","TextField","BoardService","inputValueSetter","useDispatch","addBoard","boardFactory","AddNewBoardDialog","props","onClose","open","boardName","setBoardName","boardAlias","setBoardAlias","boardDescription","setBoardDescription","dispatch","handleCancel","handleOk","newBoard","createBoard"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport { Button, Dialog, DialogActions, DialogContent, DialogTitle, TextField } from '@material-ui/core';\n\nimport BoardService from '../../service/board-service';\nimport { inputValueSetter } from '../../utils';\nimport { useDispatch } from 'react-redux';\nimport { addBoard } from '../../reducer/base-reducer';\nimport { boardFactory } from '../../models/factory';\nimport { Board } from '../../models/Board';\n\nexport interface AddNewBoardDialogProps {\n  onClose: () => void;\n  open: boolean;\n}\n\nconst AddNewBoardDialog = (props: AddNewBoardDialogProps) => {\n  const { onClose, open } = props;\n  const [boardName, setBoardName] = useState('');\n  const [boardAlias, setBoardAlias] = useState('');\n  const [boardDescription, setBoardDescription] = useState('');\n\n  const dispatch = useDispatch();\n\n  const handleCancel = () => {\n    onClose();\n  };\n\n  const handleOk = () => {\n    const newBoard: Board = boardFactory(boardName, boardDescription, boardAlias);\n    BoardService.createBoard(newBoard);\n    dispatch(addBoard(newBoard));\n    onClose();\n  };\n\n  return (\n    <Dialog maxWidth=\"xs\" open={open}>\n      <DialogTitle>Add New Board</DialogTitle>\n      <DialogContent dividers>\n        <TextField\n          fullWidth\n          label=\"Name\"\n          value={boardName}\n          onChange={inputValueSetter(setBoardName)}\n          variant=\"outlined\"\n          placeholder=\"Board title\"\n        />\n        <TextField\n          fullWidth\n          label=\"Alias\"\n          placeholder=\"Unique Alias\"\n          variant=\"outlined\"\n          value={boardAlias}\n          onChange={inputValueSetter(setBoardAlias)}\n        />\n        <TextField\n          fullWidth\n          label=\"Description\"\n          multiline\n          rows={2}\n          placeholder=\"This board is for ...\"\n          variant=\"outlined\"\n          value={boardDescription}\n          onChange={inputValueSetter(setBoardDescription)}\n        />\n      </DialogContent>\n      <DialogActions>\n        <Button autoFocus onClick={handleCancel} color=\"primary\">\n          Cancel\n        </Button>\n        <Button onClick={handleOk} color=\"primary\" variant=\"contained\">\n          OK\n        </Button>\n      </DialogActions>\n    </Dialog>\n  );\n};\n\nexport default AddNewBoardDialog;\n"]},"metadata":{},"sourceType":"module"}