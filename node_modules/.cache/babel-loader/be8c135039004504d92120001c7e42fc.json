{"ast":null,"code":"var _jsxFileName = \"/Users/yiangosstroppos/Downloads/my-kanban-board-main 2/src/components/TicketPage/index.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { Dialog, DialogContent, DialogContentText, DialogTitle, Divider, FormControlLabel, Grid, IconButton, Paper, Switch } from '@material-ui/core';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport Alert from '@material-ui/lab/Alert';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useParams } from 'react-router-dom';\nimport TicketContent from '../shared/TicketContent';\nimport { useTicketPageStyle } from './styles';\nimport { fetchDataForBoard } from '../../utils';\nimport { deleteTicket, getColumnById, getTicketById } from '../../reducer/base-reducer';\nimport DeleteConfirmDialog from '../shared/DeteleConfirmDialog';\nimport TicketService from '../../service/ticket-service';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function TicketPage() {\n  _s();\n\n  const dispatch = useDispatch();\n  const params = useParams();\n  const [isLoading, setLoading] = useState(true);\n  const [isDeleteRequested, setDeleteRequested] = useState(false);\n  const [deleteSuccessDialog, setDeleteSuccessDialog] = useState(false);\n  const ticketsById = useSelector(getTicketById);\n  const columnsById = useSelector(getColumnById);\n  useEffect(() => {\n    fetchDataForBoard(params, dispatch).then(() => {\n      setLoading(false);\n    }).catch(() => {\n      alert('failed to fetch data');\n    });\n  }, []);\n  const ticket = ticketsById[params.ticketId];\n\n  const onDelete = () => {\n    dispatch(deleteTicket({\n      ticketId: ticket.id,\n      columnId\n    }));\n    TicketService.removeTicket(ticket.id);\n    setDeleteSuccessDialog(true);\n  };\n\n  const [isEditing, setEditing] = useState(false);\n  const styles = useTicketPageStyle();\n  const columnId = Object.keys(columnsById).filter(colId => {\n    return columnsById[colId].ticketIds.indexOf(params.ticketId) > -1;\n  })[0];\n  return /*#__PURE__*/_jsxDEV(Grid, {\n    container: true,\n    direction: \"row\",\n    justify: \"center\",\n    alignItems: \"center\",\n    className: styles.container,\n    children: [!isLoading && ticket ? /*#__PURE__*/_jsxDEV(Paper, {\n      className: styles.paper,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: 'flex',\n          justifyContent: 'space-between'\n        },\n        children: [/*#__PURE__*/_jsxDEV(IconButton, {\n          \"aria-label\": \"delete\",\n          color: \"secondary\",\n          onClick: () => setDeleteRequested(true),\n          children: /*#__PURE__*/_jsxDEV(DeleteIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(FormControlLabel, {\n          labelPlacement: \"start\",\n          control: /*#__PURE__*/_jsxDEV(Switch, {\n            name: \"checkedB\",\n            color: \"primary\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 24\n          }, this),\n          value: isEditing,\n          onChange: (event, checked) => {\n            setEditing(checked);\n          },\n          label: \"Edit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Divider, {\n        className: styles.longerDivider\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(TicketContent, {\n        isEditing: isEditing,\n        ticket: ticket,\n        columnId: columnId,\n        showTitle: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(DeleteConfirmDialog, {\n        onDelete: onDelete,\n        open: isDeleteRequested,\n        onClose: () => setDeleteRequested(false)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      children: !isLoading && /*#__PURE__*/_jsxDEV(Alert, {\n        severity: \"info\",\n        children: \"No Content to show\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 29\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Dialog, {\n      open: deleteSuccessDialog,\n      \"aria-labelledby\": \"responsive-dialog-title\",\n      children: [/*#__PURE__*/_jsxDEV(DialogTitle, {\n        id: \"responsive-dialog-title\",\n        children: \"Confirm\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(DialogContent, {\n        children: /*#__PURE__*/_jsxDEV(DialogContentText, {\n          children: \"Ticket deleted successfully. Please go to the main dashboard.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 66,\n    columnNumber: 5\n  }, this);\n}\n\n_s(TicketPage, \"xTWoJuLQHuSfhRn/E6sAVK7Rb1Y=\", false, function () {\n  return [useDispatch, useParams, useSelector, useSelector, useTicketPageStyle];\n});\n\n_c = TicketPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"TicketPage\");","map":{"version":3,"sources":["/Users/yiangosstroppos/Downloads/my-kanban-board-main 2/src/components/TicketPage/index.tsx"],"names":["React","useEffect","useState","Dialog","DialogContent","DialogContentText","DialogTitle","Divider","FormControlLabel","Grid","IconButton","Paper","Switch","DeleteIcon","Alert","useDispatch","useSelector","useParams","TicketContent","useTicketPageStyle","fetchDataForBoard","deleteTicket","getColumnById","getTicketById","DeleteConfirmDialog","TicketService","TicketPage","dispatch","params","isLoading","setLoading","isDeleteRequested","setDeleteRequested","deleteSuccessDialog","setDeleteSuccessDialog","ticketsById","columnsById","then","catch","alert","ticket","ticketId","onDelete","id","columnId","removeTicket","isEditing","setEditing","styles","Object","keys","filter","colId","ticketIds","indexOf","container","paper","display","justifyContent","event","checked","longerDivider"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport {\n  Button,\n  Dialog,\n  DialogActions,\n  DialogContent,\n  DialogContentText,\n  DialogTitle,\n  Divider,\n  FormControlLabel,\n  Grid,\n  IconButton,\n  Paper,\n  Switch,\n} from '@material-ui/core';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport Alert from '@material-ui/lab/Alert';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useParams } from 'react-router-dom';\n\nimport TicketContent from '../shared/TicketContent';\nimport { useTicketPageStyle } from './styles';\nimport { fetchDataForBoard } from '../../utils';\nimport { deleteTicket, getColumnById, getTicketById } from '../../reducer/base-reducer';\nimport DeleteConfirmDialog from '../shared/DeteleConfirmDialog';\nimport TicketService from '../../service/ticket-service';\n\nexport default function TicketPage() {\n  const dispatch = useDispatch();\n  const params = useParams<any>();\n  const [isLoading, setLoading] = useState(true);\n\n  const [isDeleteRequested, setDeleteRequested] = useState(false);\n\n  const [deleteSuccessDialog, setDeleteSuccessDialog] = useState(false);\n\n  const ticketsById = useSelector(getTicketById);\n  const columnsById = useSelector(getColumnById);\n\n  useEffect(() => {\n    fetchDataForBoard(params, dispatch)\n      .then(() => {\n        setLoading(false);\n      })\n      .catch(() => {\n        alert('failed to fetch data');\n      });\n  }, []);\n\n  const ticket = ticketsById[params.ticketId];\n\n  const onDelete = () => {\n    dispatch(deleteTicket({ ticketId: ticket.id, columnId }));\n    TicketService.removeTicket(ticket.id);\n    setDeleteSuccessDialog(true);\n  };\n\n  const [isEditing, setEditing] = useState(false);\n  const styles = useTicketPageStyle();\n\n  const columnId = Object.keys(columnsById).filter((colId) => {\n    return columnsById[colId].ticketIds.indexOf(params.ticketId) > -1;\n  })[0];\n\n  return (\n    <Grid container direction=\"row\" justify=\"center\" alignItems=\"center\" className={styles.container}>\n      {!isLoading && ticket ? (\n        <Paper className={styles.paper}>\n          <div style={{ display: 'flex', justifyContent: 'space-between' }}>\n            <IconButton aria-label=\"delete\" color=\"secondary\" onClick={() => setDeleteRequested(true)}>\n              <DeleteIcon />\n            </IconButton>\n            <FormControlLabel\n              labelPlacement=\"start\"\n              control={<Switch name=\"checkedB\" color=\"primary\" />}\n              value={isEditing}\n              onChange={(event, checked) => {\n                setEditing(checked);\n              }}\n              label=\"Edit\"\n            />\n          </div>\n          <Divider className={styles.longerDivider} />\n          <TicketContent isEditing={isEditing} ticket={ticket} columnId={columnId} showTitle />\n          <DeleteConfirmDialog onDelete={onDelete} open={isDeleteRequested} onClose={() => setDeleteRequested(false)} />\n        </Paper>\n      ) : (\n        <div>{!isLoading && <Alert severity=\"info\">No Content to show</Alert>}</div>\n      )}\n      <Dialog open={deleteSuccessDialog} aria-labelledby=\"responsive-dialog-title\">\n        <DialogTitle id=\"responsive-dialog-title\">Confirm</DialogTitle>\n        <DialogContent>\n          <DialogContentText>Ticket deleted successfully. Please go to the main dashboard.</DialogContentText>\n        </DialogContent>\n      </Dialog>\n    </Grid>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}