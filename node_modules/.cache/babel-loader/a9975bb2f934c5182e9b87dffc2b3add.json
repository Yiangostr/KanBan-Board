{"ast":null,"code":"var _jsxFileName = \"/Users/yiangosstroppos/Downloads/my-kanban-board-main 2/src/components/BoardPage/ColumnComponent/ColumnContainer.tsx\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { Paper, Typography } from '@material-ui/core';\nimport { Draggable, Droppable } from 'react-beautiful-dnd';\nimport { DragIndicator } from '@material-ui/icons';\nimport TaskCard from '../TicketComponents/TicketCard';\nimport PlaceholderAddNewButton from '../../shared/PlaceholderAddNewButton';\nimport ColumnAction from './ColumnAction';\nimport TicketService from '../../../service/ticket-service';\nimport { useCommonStyles, useLaneStyles } from '../styles';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { getTicketById, addTicket } from '../../../reducer/base-reducer';\nimport { ticketFactory } from '../../../models/factory';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ColumnContainer = ({\n  column,\n  dragHandleProps,\n  columnId\n}) => {\n  _s();\n\n  const classNames = useLaneStyles();\n  const commonClassNames = useCommonStyles();\n  const ticketsById = useSelector(getTicketById);\n  const dispatch = useDispatch();\n\n  const onAddNewTicket = title => {\n    const ticket = ticketFactory(title, '', Date.now(), Date.now());\n    dispatch(addTicket({\n      ticket,\n      columnId\n    }));\n    TicketService.createTicket(ticket, columnId, column.ticketIds.length);\n  };\n\n  return /*#__PURE__*/_jsxDEV(Paper, {\n    className: `${classNames.lane} board-status`,\n    ...dragHandleProps,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: classNames.laneHeader,\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        className: commonClassNames.dragHandle,\n        children: /*#__PURE__*/_jsxDEV(DragIndicator, {\n          fontSize: \"small\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        align: \"center\",\n        className: classNames.laneTitle,\n        children: column.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(ColumnAction, {\n          colId: columnId\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Droppable, {\n      type: \"ticket\",\n      droppableId: columnId,\n      children: provided => {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          ref: provided.innerRef,\n          ...provided.droppableProps,\n          className: classNames.tasks,\n          children: [column.ticketIds.map((ticketId, index) => {\n            const ticket = ticketsById[ticketId];\n            return /*#__PURE__*/_jsxDEV(Draggable, {\n              draggableId: ticketId,\n              index: index,\n              children: provided => {\n                return /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: classNames.taskContainer,\n                  ref: provided.innerRef,\n                  ...provided.draggableProps,\n                  children: /*#__PURE__*/_jsxDEV(TaskCard, {\n                    ticket: ticket,\n                    statusId: ticket.id,\n                    dragHandleProps: provided.dragHandleProps\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 72,\n                    columnNumber: 27\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 71,\n                  columnNumber: 25\n                }, this);\n              }\n            }, ticketId, false, {\n              fileName: _jsxFileName,\n              lineNumber: 68,\n              columnNumber: 19\n            }, this);\n          }), provided.placeholder, /*#__PURE__*/_jsxDEV(PlaceholderAddNewButton, {\n            buttonName: \"Add Ticket\",\n            onAdd: onAddNewTicket\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 13\n        }, this);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 5\n  }, this);\n};\n\n_s(ColumnContainer, \"gFZSG/8SHWt1/wGIxypZhPhXOT4=\", false, function () {\n  return [useLaneStyles, useCommonStyles, useSelector, useDispatch];\n});\n\n_c = ColumnContainer;\nexport default ColumnContainer;\n\nvar _c;\n\n$RefreshReg$(_c, \"ColumnContainer\");","map":{"version":3,"sources":["/Users/yiangosstroppos/Downloads/my-kanban-board-main 2/src/components/BoardPage/ColumnComponent/ColumnContainer.tsx"],"names":["React","Paper","Typography","Draggable","Droppable","DragIndicator","TaskCard","PlaceholderAddNewButton","ColumnAction","TicketService","useCommonStyles","useLaneStyles","useDispatch","useSelector","getTicketById","addTicket","ticketFactory","ColumnContainer","column","dragHandleProps","columnId","classNames","commonClassNames","ticketsById","dispatch","onAddNewTicket","title","ticket","Date","now","createTicket","ticketIds","length","lane","laneHeader","dragHandle","laneTitle","provided","innerRef","droppableProps","tasks","map","ticketId","index","taskContainer","draggableProps","id","placeholder"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { Paper, Typography } from '@material-ui/core';\nimport {\n  Draggable,\n  DraggableProvided,\n  DraggableProvidedDragHandleProps,\n  Droppable,\n  DroppableProvided,\n} from 'react-beautiful-dnd';\nimport { DragIndicator } from '@material-ui/icons';\n\nimport TaskCard from '../TicketComponents/TicketCard';\nimport PlaceholderAddNewButton from '../../shared/PlaceholderAddNewButton';\nimport ColumnAction from './ColumnAction';\nimport TicketService from '../../../service/ticket-service';\n\nimport { useCommonStyles, useLaneStyles } from '../styles';\nimport { ColumnById } from '../../../reducer/types';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { getTicketById, addTicket } from '../../../reducer/base-reducer';\nimport { Tickets } from '../../../models/Tickets';\nimport { ticketFactory } from '../../../models/factory';\n\nexport interface Props {\n  column: ColumnById;\n  columnId: string;\n  dragHandleProps: DraggableProvidedDragHandleProps | undefined;\n}\n\nconst ColumnContainer = ({ column, dragHandleProps, columnId }: Props) => {\n  const classNames = useLaneStyles();\n  const commonClassNames = useCommonStyles();\n\n  const ticketsById = useSelector(getTicketById);\n\n  const dispatch = useDispatch();\n\n  const onAddNewTicket = (title: string) => {\n    const ticket = ticketFactory(title, '', Date.now(), Date.now());\n    dispatch(addTicket({ ticket, columnId }));\n    TicketService.createTicket(ticket, columnId, column.ticketIds.length);\n  };\n\n  return (\n    <Paper className={`${classNames.lane} board-status`} {...dragHandleProps}>\n      <div className={classNames.laneHeader}>\n        <span className={commonClassNames.dragHandle}>\n          <DragIndicator fontSize=\"small\" />\n        </span>\n\n        <Typography align=\"center\" className={classNames.laneTitle}>\n          {column.title}\n        </Typography>\n\n        <div>\n          <ColumnAction colId={columnId} />\n        </div>\n      </div>\n\n      <Droppable type=\"ticket\" droppableId={columnId}>\n        {(provided: DroppableProvided) => {\n          return (\n            <div ref={provided.innerRef} {...provided.droppableProps} className={classNames.tasks}>\n              {column.ticketIds.map((ticketId, index) => {\n                const ticket: Tickets = ticketsById[ticketId];\n\n                return (\n                  <Draggable key={ticketId} draggableId={ticketId} index={index}>\n                    {(provided: DraggableProvided) => {\n                      return (\n                        <div className={classNames.taskContainer} ref={provided.innerRef} {...provided.draggableProps}>\n                          <TaskCard ticket={ticket} statusId={ticket.id} dragHandleProps={provided.dragHandleProps} />\n                        </div>\n                      );\n                    }}\n                  </Draggable>\n                );\n              })}\n\n              {provided.placeholder}\n\n              <PlaceholderAddNewButton buttonName=\"Add Ticket\" onAdd={onAddNewTicket} />\n            </div>\n          );\n        }}\n      </Droppable>\n    </Paper>\n  );\n};\n\nexport default ColumnContainer;\n"]},"metadata":{},"sourceType":"module"}