{"ast":null,"code":"var _jsxFileName = \"/Users/yiangosstroppos/Downloads/my-kanban-board-main 2/src/components/BoardPage/index.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport { useDispatch } from 'react-redux';\nimport { Grid } from '@material-ui/core';\nimport Kanban from './Kanban';\nimport Menubar from './Menubar';\nimport { useParams } from 'react-router-dom';\nimport { useDashboardStyles } from './styles';\nimport { fetchDataForBoard } from '../../utils';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst BoardPage = () => {\n  _s();\n\n  const dashBoardStyle = useDashboardStyles();\n  const params = useParams();\n  const dispatch = useDispatch();\n  const [loading, setLoading] = useState(true);\n  useEffect(() => {\n    fetchDataForBoard(params, dispatch).then(() => {\n      setLoading(false);\n    }).catch(() => {\n      alert('Failed to fetch data');\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Menubar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: dashBoardStyle.content,\n      children: loading ? /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        direction: \"row\",\n        justify: \"center\",\n        alignItems: \"center\",\n        className: dashBoardStyle.loader,\n        children: /*#__PURE__*/_jsxDEV(CircularProgress, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(Kanban, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_s(BoardPage, \"fBK+w+Aok39Jd3fROY49zOtTNZ4=\", false, function () {\n  return [useDashboardStyles, useParams, useDispatch];\n});\n\n_c = BoardPage;\nexport default BoardPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"BoardPage\");","map":{"version":3,"sources":["/Users/yiangosstroppos/Downloads/my-kanban-board-main 2/src/components/BoardPage/index.tsx"],"names":["React","useEffect","useState","CircularProgress","useDispatch","Grid","Kanban","Menubar","useParams","useDashboardStyles","fetchDataForBoard","BoardPage","dashBoardStyle","params","dispatch","loading","setLoading","then","catch","alert","content","loader"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AAEA,OAAOC,gBAAP,MAA6B,oCAA7B;AACA,SAASC,WAAT,QAA4B,aAA5B;AACA,SAASC,IAAT,QAAqB,mBAArB;AAEA,OAAOC,MAAP,MAAmB,UAAnB;AACA,OAAOC,OAAP,MAAoB,WAApB;AAEA,SAASC,SAAT,QAA0B,kBAA1B;AACA,SAASC,kBAAT,QAAmC,UAAnC;AACA,SAASC,iBAAT,QAAkC,aAAlC;;;;AAMA,MAAMC,SAAS,GAAG,MAAM;AAAA;;AACtB,QAAMC,cAAc,GAAGH,kBAAkB,EAAzC;AAEA,QAAMI,MAAM,GAAGL,SAAS,EAAxB;AACA,QAAMM,QAAQ,GAAGV,WAAW,EAA5B;AAEA,QAAM,CAACW,OAAD,EAAUC,UAAV,IAAwBd,QAAQ,CAAC,IAAD,CAAtC;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACdS,IAAAA,iBAAiB,CAACG,MAAD,EAASC,QAAT,CAAjB,CACGG,IADH,CACQ,MAAM;AACVD,MAAAA,UAAU,CAAC,KAAD,CAAV;AACD,KAHH,EAIGE,KAJH,CAIS,MAAM;AACXC,MAAAA,KAAK,CAAC,sBAAD,CAAL;AACD,KANH;AAOD,GARQ,EAQN,EARM,CAAT;AAUA,sBACE;AAAA,4BACE,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAK,MAAA,SAAS,EAAEP,cAAc,CAACQ,OAA/B;AAAA,gBACGL,OAAO,gBACN,QAAC,IAAD;AAAM,QAAA,SAAS,MAAf;AAAgB,QAAA,SAAS,EAAC,KAA1B;AAAgC,QAAA,OAAO,EAAC,QAAxC;AAAiD,QAAA,UAAU,EAAC,QAA5D;AAAqE,QAAA,SAAS,EAAEH,cAAc,CAACS,MAA/F;AAAA,+BACE,QAAC,gBAAD;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cADM,gBAKN,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AANJ;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA,kBADF;AAcD,CAhCD;;GAAMV,S;UACmBF,kB,EAERD,S,EACEJ,W;;;KAJbO,S;AAkCN,eAAeA,SAAf","sourcesContent":["import React, { useEffect, useState } from 'react';\n\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport { useDispatch } from 'react-redux';\nimport { Grid } from '@material-ui/core';\n\nimport Kanban from './Kanban';\nimport Menubar from './Menubar';\n\nimport { useParams } from 'react-router-dom';\nimport { useDashboardStyles } from './styles';\nimport { fetchDataForBoard } from '../../utils';\n\ninterface Params {\n  alias: string;\n}\n\nconst BoardPage = () => {\n  const dashBoardStyle = useDashboardStyles();\n\n  const params = useParams<Params>();\n  const dispatch = useDispatch();\n\n  const [loading, setLoading] = useState(true);\n\n  useEffect(() => {\n    fetchDataForBoard(params, dispatch)\n      .then(() => {\n        setLoading(false);\n      })\n      .catch(() => {\n        alert('Failed to fetch data');\n      });\n  }, []);\n\n  return (\n    <>\n      <Menubar />\n      <div className={dashBoardStyle.content}>\n        {loading ? (\n          <Grid container direction=\"row\" justify=\"center\" alignItems=\"center\" className={dashBoardStyle.loader}>\n            <CircularProgress />\n          </Grid>\n        ) : (\n          <Kanban />\n        )}\n      </div>\n    </>\n  );\n};\n\nexport default BoardPage;\n"]},"metadata":{},"sourceType":"module"}