{"ast":null,"code":"var _jsxFileName = \"/Users/yiangosstroppos/Downloads/my-kanban-board-main 2/src/components/BoardPage/TicketComponents/TicketCard.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport Typography from '@material-ui/core/Typography';\nimport Paper from '@material-ui/core/Paper';\nimport { useDispatch, useSelector } from 'react-redux';\nimport TicketDialog from '../TicketComponents/TicketDialog';\nimport { useCardStyles } from '../styles';\nimport { getUI, setUI } from '../../../reducer/base-reducer';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function TaskCard({\n  ticket,\n  dragHandleProps\n}) {\n  _s();\n\n  const classNames = useCardStyles();\n  const isTicketEditingDialog = useSelector(getUI).ticketDialog;\n  const dispatch = useDispatch();\n  const [open, setOpen] = useState(isTicketEditingDialog);\n\n  const openDialog = ticketDialog => {\n    dispatch(setUI({\n      ticketDialog\n    }));\n\n    if (!ticketDialog) {\n      dispatch(setUI({\n        ticketEditing: false\n      }));\n    }\n\n    setOpen(ticketDialog);\n  };\n\n  return /*#__PURE__*/_jsxDEV(Paper, {\n    className: classNames.task,\n    ...dragHandleProps,\n    onDoubleClick: () => openDialog(true),\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: classNames.taskHeader,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(Typography, {\n          className: classNames.title,\n          children: ticket.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TicketDialog, {\n      ticket: ticket,\n      open: open,\n      setDialog: openDialog\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 5\n  }, this);\n}\n\n_s(TaskCard, \"ZM+SIqpvsqWmP7HbELeHhXnYiMU=\", false, function () {\n  return [useCardStyles, useSelector, useDispatch];\n});\n\n_c = TaskCard;\n\nvar _c;\n\n$RefreshReg$(_c, \"TaskCard\");","map":{"version":3,"sources":["/Users/yiangosstroppos/Downloads/my-kanban-board-main 2/src/components/BoardPage/TicketComponents/TicketCard.tsx"],"names":["React","useState","Typography","Paper","useDispatch","useSelector","TicketDialog","useCardStyles","getUI","setUI","TaskCard","ticket","dragHandleProps","classNames","isTicketEditingDialog","ticketDialog","dispatch","open","setOpen","openDialog","ticketEditing","task","taskHeader","title"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,UAAP,MAAuB,8BAAvB;AACA,OAAOC,KAAP,MAAkB,yBAAlB;AAEA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AAEA,OAAOC,YAAP,MAAyB,kCAAzB;AAEA,SAASC,aAAT,QAA8B,WAA9B;AAEA,SAASC,KAAT,EAAgBC,KAAhB,QAA6B,+BAA7B;;AAQA,eAAe,SAASC,QAAT,CAAkB;AAAEC,EAAAA,MAAF;AAAUC,EAAAA;AAAV,CAAlB,EAAsD;AAAA;;AACnE,QAAMC,UAAU,GAAGN,aAAa,EAAhC;AACA,QAAMO,qBAAqB,GAAGT,WAAW,CAACG,KAAD,CAAX,CAAmBO,YAAjD;AACA,QAAMC,QAAQ,GAAGZ,WAAW,EAA5B;AAEA,QAAM,CAACa,IAAD,EAAOC,OAAP,IAAkBjB,QAAQ,CAACa,qBAAD,CAAhC;;AAEA,QAAMK,UAAU,GAAIJ,YAAD,IAA2B;AAC5CC,IAAAA,QAAQ,CAACP,KAAK,CAAC;AAAEM,MAAAA;AAAF,KAAD,CAAN,CAAR;;AACA,QAAI,CAACA,YAAL,EAAmB;AACjBC,MAAAA,QAAQ,CAACP,KAAK,CAAC;AAAEW,QAAAA,aAAa,EAAE;AAAjB,OAAD,CAAN,CAAR;AACD;;AACDF,IAAAA,OAAO,CAACH,YAAD,CAAP;AACD,GAND;;AAQA,sBACE,QAAC,KAAD;AAAO,IAAA,SAAS,EAAEF,UAAU,CAACQ,IAA7B;AAAA,OAAuCT,eAAvC;AAAwD,IAAA,aAAa,EAAE,MAAMO,UAAU,CAAC,IAAD,CAAvF;AAAA,4BACE;AAAK,MAAA,SAAS,EAAEN,UAAU,CAACS,UAA3B;AAAA,6BACE;AAAA,+BACE,QAAC,UAAD;AAAY,UAAA,SAAS,EAAET,UAAU,CAACU,KAAlC;AAAA,oBAA0CZ,MAAM,CAACY;AAAjD;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF,eAOE,QAAC,YAAD;AAAc,MAAA,MAAM,EAAEZ,MAAtB;AAA8B,MAAA,IAAI,EAAEM,IAApC;AAA0C,MAAA,SAAS,EAAEE;AAArD;AAAA;AAAA;AAAA;AAAA,YAPF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAWD;;GA1BuBT,Q;UACHH,a,EACWF,W,EACbD,W;;;KAHKM,Q","sourcesContent":["import React, { useState } from 'react';\nimport Typography from '@material-ui/core/Typography';\nimport Paper from '@material-ui/core/Paper';\nimport { DraggableProvidedDragHandleProps } from 'react-beautiful-dnd';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport TicketDialog from '../TicketComponents/TicketDialog';\n\nimport { useCardStyles } from '../styles';\nimport { Tickets } from '../../../models/Tickets';\nimport { getUI, setUI } from '../../../reducer/base-reducer';\n\nexport interface Props {\n  ticket: Tickets;\n  statusId: string;\n  dragHandleProps: DraggableProvidedDragHandleProps | undefined;\n}\n\nexport default function TaskCard({ ticket, dragHandleProps }: Props) {\n  const classNames = useCardStyles();\n  const isTicketEditingDialog = useSelector(getUI).ticketDialog;\n  const dispatch = useDispatch();\n\n  const [open, setOpen] = useState(isTicketEditingDialog);\n\n  const openDialog = (ticketDialog: boolean) => {\n    dispatch(setUI({ ticketDialog }));\n    if (!ticketDialog) {\n      dispatch(setUI({ ticketEditing: false }));\n    }\n    setOpen(ticketDialog);\n  };\n\n  return (\n    <Paper className={classNames.task} {...dragHandleProps} onDoubleClick={() => openDialog(true)}>\n      <div className={classNames.taskHeader}>\n        <div>\n          <Typography className={classNames.title}>{ticket.title}</Typography>\n        </div>\n      </div>\n\n      <TicketDialog ticket={ticket} open={open} setDialog={openDialog} />\n    </Paper>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}